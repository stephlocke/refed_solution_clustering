name: Render rmd file

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  render:
    name: Render R Markdown File
    runs-on: ubuntu-latest
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - name: Install ubuntu deps
          run: |
            sudo apt-get update
            sudo apt-get install libcurl4-openssl-dev
        - uses: r-lib/actions/setup-r@v2
        - uses: r-lib/actions/setup-pandoc@v2
        - name: Set RENV_PATHS_ROOT
          shell: bash
          run: |
            echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
        - name: Install and activate renv
          run: |
            install.packages("renv")
            renv::activate()
            renv::install()
          shell: Rscript {0}
        - name: Get R and OS version
          id: get-version
          run: |
            cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
            cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
          shell: Rscript {0}
        - name: Restore Renv package cache
          uses: actions/cache@v2
          with:
            path: ${{ env.RENV_PATHS_ROOT }}
            key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
            restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-
        - name: Install packages if required
          run: |
            renv::install()
        - name: Render Clustering Rmd File
          run: Rscript -e 'rmarkdown::render("R/clustering.Rmd", output_dir="outputs", knit_root_dir="..")'
        - name: Commit results
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .  || echo "No changes to commit"
            git commit -m "[ci skip] Built analysis"  || echo "No changes to commit"
            git push  || echo "No changes to commit"
